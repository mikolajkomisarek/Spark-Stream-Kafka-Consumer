kafka-configuration {
    bootstrap.servers="localhost:9092"
    bootstrap.servers=${?BOOTSTRAP_SERVER_URL}
    schema.registry.url="http://localhost:8081"
    schema.registry.url = ${?SCHEMA_REGISTRY_URL}
    auto.offset.reset="earliest"
    auto.offset.reset=${?OFFSET_RESET}
    group.id: "group-id"
    group.id: ${?GROUP_ID}

    key.deserializer=org.apache.kafka.common.serialization.StringDeserializer
    value.deserializer=io.confluent.kafka.serializers.KafkaAvroDeserializer

    key.serializer=org.apache.kafka.common.serialization.StringSerializer
    value.serializer=io.confluent.kafka.serializers.KafkaAvroSerializer
}


data {
    topic.schema="netflow"
    topic.frame.delimiter=","
    topic.frame.format="line"


    topic.processed="netflow-processed"
    topic.processed=${?TOPIC_PROCESSED}

    topic.raw="netflow-raw"
    topic.raw=${?TOPIC_RAW}

    query.file.localization="src/main/resources/query.sql"
}

spark {
    master="local[*]"
    master=${?SPARK_MASTER}
    applicationName="SparkConsumerService"
    applicationName=${?SPARK_APPLICATION_NAME}
    stream.duration=20
    stream.duration=${?SPARK_STREAM_DURATION}
}